name: Build & publish (maturin, polars)

permissions:
  contents: write
  id-token: write   # для Trusted Publishing на PyPI

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. 0.1.2)'
        required: true
  push:
    tags: ["v*.*.*"]   # релиз пушем тега

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            manylinux: "2_28"
            target: ""
            sdist: true
          - os: windows-latest
            manylinux: ""
            target: ""
            sdist: false
          - os: macos-latest
            manylinux: ""
            target: "universal2-apple-darwin"
            sdist: false

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      # Linux: wheels + sdist (manylinux)
      - name: Build wheels (+sdist on Linux)
        if: runner.os == 'Linux'
        uses: PyO3/maturin-action@v1
        with:
          rust-toolchain: stable
          command: build
          manylinux: ${{ matrix.manylinux }}     # 2_28
          args: >
            --release
            --sdist
            -m python-bindings/Cargo.toml
            --features polars

      # Windows: только wheels
      - name: Build wheels (Windows)
        if: runner.os == 'Windows'
        uses: PyO3/maturin-action@v1
        with:
          rust-toolchain: stable
          command: build
          args: >
            --release
            -m python-bindings/Cargo.toml
            --features polars

      # macOS: universal2 wheels (без --universal2 в args!)
      - name: Build wheels (macOS universal2)
        if: runner.os == 'macOS'
        uses: PyO3/maturin-action@v1
        with:
          rust-toolchain: stable
          command: build
          target: universal2-apple-darwin
          args: >
            --release
            -m python-bindings/Cargo.toml
            --features polars

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: target/wheels/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.version || github.ref_name }}
          name: Release v${{ inputs.version || github.ref_name }}
          files: dist/*

      # PyPI: Trusted Publishing (OIDC)
      - name: Publish to PyPI (Trusted Publisher)
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --skip-existing dist/*
          token: pypi

      # Альтернатива через API-токен:
      # - name: Publish to PyPI (API token)
      #   uses: PyO3/maturin-action@v1
      #   env:
      #     MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
      #   with:
      #     command: upload
      #     args: --skip-existing dist/*
